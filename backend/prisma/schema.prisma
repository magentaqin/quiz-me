generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id      Int           @id @default(autoincrement())
  role    Role          @default(USER)
  email   String        @unique
  userName  String      @unique
  userId String         @unique
  password String       @default("")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
  questions Question[]
  answers Answer[]
}

model Question {
  authorId String
  id      Int           @id @default(autoincrement()) 
  questionId String     @unique
  title   String        @db.VarChar(300)
  description  String   @db.VarChar(1000)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
  author User @relation(fields: [authorId], references: [userId])
  answers     Answer[]
  tags TagsOnQuestions[]

  @@index([questionId], name: "questionId")
  @@index([authorId], name: "author")
  @@fulltext([title, description])
}

model QuestionTag {
  id      Int           @id @default(autoincrement())
  tagId   String        @unique
  name    String        @db.VarChar(20)
  questions TagsOnQuestions[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
}

model TagsOnQuestions {
  question Question @relation(fields: [questionId], references: [questionId])
  questionId String 
  tag QuestionTag @relation(fields: [tagId], references: [tagId])
  tagId String 
  createdAt DateTime @default(now())
  @@id([questionId, tagId])
}

model Answer {
  authorId String
  questionId String 
  id      Int           @id @default(autoincrement())
  answerId String     @unique
  content    String        @db.Text()
  author User @relation(fields: [authorId], references: [userId])
  question Question @relation(fields: [questionId], references: [questionId]) 
  
  @@fulltext([content])
  @@index([authorId], name: "author")
  @@index([questionId], name: "question")
}